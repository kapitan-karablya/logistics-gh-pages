{"version":3,"sources":["components/ApplicationModal/ApplicationModal.module.css","components/Main/Main.module.css","assets/images/truck.svg","components/Header/Header.tsx","components/ApplicationModal/ApplicationModal.tsx","assets/TestData.ts","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Header/Header.module.css"],"names":["module","exports","Header","className","style","header","headerTitleWrapper","src","logo","alt","headerTitle","AdminModeContext","Consumer","adminMode","toggleMode","mode","modeButton","onClick","React","Modal","setAppElement","ApplicationModal","props","closeModal","setState","application","onAfterOpen","id","state","handleStateChange","event","target","name","value","prevState","handleSubmit","applicationId","lastId","preventDefault","localStorage","getItem","parseInt","setItem","toString","setTimeout","saveApplication","update","JSON","stringify","isNewApplication","this","isOpen","onRequestClose","modalApplication","modalHeader","date","toLocaleDateString","toLocaleTimeString","modalForm","modalFormField","htmlFor","type","modalInput","undefined","companyName","onChange","classNames","carrierFullName","modalFormCarrier","modalInputPhone","carrierPhoneNumber","modalFormAti","modalInputAti","atiCode","modalTextArea","comment","modalButtons","modalButton","modalButtonSave","e","testData","applications","Date","emptyApplication","Main","currentApplication","modalIsOpen","handleSelectApplication","stopPropagation","document","addEventListener","escRemoveSelection","handleRemoveSelection","removeEventListener","code","handleAddApplication","openModal","handleChangeApplication","handleDeleteApplication","removeItem","updateApplications","addTestData","list","newId","i","length","Array","key","index","Number","parse","console","log","values","getAllValues","mainWrapper","main","tableButtons","tableButton","testDataButton","tableEditButtons","disabled","tableWrapper","tableScroll","table","map","item","active","href","createContext","App","Provider","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87ddb37c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalApplication\":\"ApplicationModal_modalApplication__1S2mP\",\"modalHeader\":\"ApplicationModal_modalHeader__1R9Oj\",\"modalForm\":\"ApplicationModal_modalForm__1_-Vp\",\"modalFormField\":\"ApplicationModal_modalFormField__1aTFi\",\"modalInput\":\"ApplicationModal_modalInput__2CtGf\",\"modalFormCarrier\":\"ApplicationModal_modalFormCarrier__3QcK8\",\"modalFormAti\":\"ApplicationModal_modalFormAti__2bnzC\",\"modalInputPhone\":\"ApplicationModal_modalInputPhone__1ph-u\",\"modalInputAti\":\"ApplicationModal_modalInputAti__1BeSD\",\"modalTextArea\":\"ApplicationModal_modalTextArea__3nTAE\",\"modalButtons\":\"ApplicationModal_modalButtons__3O9wr\",\"modalButton\":\"ApplicationModal_modalButton__37_9o\",\"modalButtonSave\":\"ApplicationModal_modalButtonSave__269C-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Main_mainWrapper__1vL3Z\",\"main\":\"Main_main__1aM5a\",\"tableButtons\":\"Main_tableButtons__1vFSQ\",\"tableEditButtons\":\"Main_tableEditButtons__apoGD\",\"tableButton\":\"Main_tableButton__1qs90\",\"testDataButton\":\"Main_testDataButton__gwxac\",\"tableWrapper\":\"Main_tableWrapper__1iAWR\",\"table\":\"Main_table__1ahgg\",\"tableScroll\":\"Main_tableScroll__1BlhF\",\"application\":\"Main_application__24ZOo\",\"active\":\"Main_active__2c-OM\"};","export default __webpack_public_path__ + \"static/media/truck.aa4d06cd.svg\";","import * as React from \"react\";\r\n\r\nimport style from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/truck.svg\";\r\nimport {AdminModeContext} from '../../App';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={style.header}>\r\n                <div className={style.headerTitleWrapper}>\r\n                    <img src={logo} className={style.logo} alt=\"logo\"/>\r\n                    <span className={style.headerTitle}>LogisTruck</span>\r\n                </div>\r\n                <AdminModeContext.Consumer>\r\n                    {({adminMode, toggleMode}) => (\r\n                        <div className={style.mode}>\r\n                            <button className={style.modeButton}\r\n                                    onClick={toggleMode}>{adminMode ? 'Администратор' : 'Пользователь'}</button>\r\n                        </div>\r\n                    )}\r\n                </AdminModeContext.Consumer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport style from \"./ApplicationModal.module.css\";\r\nimport {Application} from \"../../App\";\r\nimport {ChangeEvent} from \"react\";\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\ntype ApplicationModalProps = {\r\n    application: Application;\r\n    isOpen: boolean;\r\n    closeModal: Function;\r\n    update: Function;\r\n};\r\n\r\ntype ApplicationModalState = {\r\n    application: Application;\r\n};\r\n\r\nexport default class ApplicationModal extends React.Component<ApplicationModalProps, ApplicationModalState> {\r\n    constructor(props: ApplicationModalProps) {\r\n        super(props);\r\n        this.state = {\r\n            application: props.application,\r\n        }\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.props.closeModal();\r\n        this.setState({application: this.props.application})\r\n    };\r\n\r\n    onAfterOpen = () => {\r\n        if (this.props.application.id !== this.state.application.id)\r\n            this.setState({application: this.props.application});\r\n    };\r\n\r\n    handleStateChange = (event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => {\r\n        const {name, value} = event.target;\r\n        this.setState(prevState => ({\r\n            application: {\r\n                ...prevState.application,\r\n                [name]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    handleSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n        let applicationId: number;\r\n        let lastId;\r\n        if (this.state.application.id === 0) {\r\n            lastId = localStorage.getItem('lastId');\r\n            applicationId = lastId === null ? 1 : parseInt(lastId) + 1;\r\n            localStorage.setItem('lastId', applicationId.toString());\r\n        } else applicationId = this.state.application.id;\r\n        this.setState(prevState => ({\r\n            application: {\r\n                ...prevState.application,\r\n                id: applicationId,\r\n            }\r\n        }));\r\n        setTimeout(this.saveApplication, 1, applicationId);\r\n        this.props.closeModal();\r\n        this.props.update()\r\n    };\r\n\r\n    saveApplication = (applicationId: number) => {\r\n        localStorage.setItem(applicationId.toString(), JSON.stringify(this.state.application));\r\n        this.props.update()\r\n    };\r\n\r\n    render() {\r\n        const isNewApplication = this.props.application.id === 0;\r\n        return (\r\n            <Modal isOpen={this.props.isOpen}\r\n                   onRequestClose={() => this.closeModal()}\r\n                   className={style.modalApplication}\r\n                   onAfterOpen={() => this.onAfterOpen()}\r\n            >\r\n                <div className={style.modalHeader}>\r\n                    {isNewApplication\r\n                        ? \"Новая Заявка\"\r\n                        : \"Заявка №\" + this.state.application.id\r\n                        + \" от \" + this.state.application.date.toLocaleDateString()\r\n                        + \" \" + this.state.application.date.toLocaleTimeString()}\r\n                </div>\r\n                <form className={style.modalForm}>\r\n                    <div className={style.modalFormField}>\r\n                        <label htmlFor=\"companyName\">Фирма клиента</label>\r\n                        <input id=\"companyName\" name=\"companyName\" type=\"text\" className={style.modalInput}\r\n                               value={isNewApplication ? undefined : this.state.application.companyName}\r\n                               onChange={(event) => this.handleStateChange(event)}/>\r\n                    </div>\r\n                    <div className={style.modalFormField}>\r\n                        <label htmlFor=\"carrierFullMame\">ФИО первозчика</label>\r\n                        <input id=\"carrierFullMame\" name=\"carrierFullName\" type=\"text\"\r\n                               className={classNames(style.modalInput)}\r\n                               value={isNewApplication ? undefined : this.state.application.carrierFullName}\r\n                               onChange={(event) => this.handleStateChange(event)}/>\r\n                    </div>\r\n                    <div className={style.modalFormCarrier}>\r\n                        <div>\r\n                            <label htmlFor=\"carrierPhoneNumber\">Телефон перевозчика</label>\r\n                            <input id=\"carrierPhoneNumber\" name=\"carrierPhoneNumber\"\r\n                                   className={classNames(style.modalInput, style.modalInputPhone)} type=\"tel\"\r\n                                   value={isNewApplication ? undefined : this.state.application.carrierPhoneNumber}\r\n                                   onChange={(event) => this.handleStateChange(event)}/>\r\n                        </div>\r\n                        <div className={style.modalFormAti}>\r\n                            <label htmlFor=\"carrierAtiCode\">ATI код перевозчика</label>\r\n                            <input id=\"carrierAtiCode\" name=\"atiCode\"\r\n                                   className={classNames(style.modalInput, style.modalInputAti)}\r\n                                   value={isNewApplication ? undefined : this.state.application.atiCode}\r\n                                   onChange={(event) => this.handleStateChange(event)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.modalFormField}>\r\n                        <label htmlFor=\"comment\">Коментарий</label>\r\n                        <textarea id=\"comment\" name=\"comment\"\r\n                                  className={classNames(style.modalInput, style.modalTextArea)}\r\n                                  value={isNewApplication ? undefined : this.state.application.comment}\r\n                                  onChange={(event) => this.handleStateChange(event)}/>\r\n                    </div>\r\n                    <div className={style.modalButtons}>\r\n                        <button type=\"submit\" className={classNames(style.modalButton, style.modalButtonSave)}\r\n                                onClick={(e) => this.handleSubmit(e)}>Сохранить\r\n                        </button>\r\n                        <button className={style.modalButton} onClick={() => this.closeModal()}>Закрыть</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import {Application} from \"../App\";\r\n\r\nexport const testData: {\r\n    applications: Application[]\r\n} = {\r\n    applications: [\r\n        {\r\n            id: 1,\r\n            date: new Date(\"2021-09-14 13:12:46\"),\r\n            companyName: \"АвтоАс\",\r\n            comment: \"\",\r\n            carrierFullName: \"Нестеров Макар Маркович\",\r\n            carrierPhoneNumber: \"+7144026785\",\r\n            atiCode: 60638,\r\n        },\r\n        {\r\n            id: 2,\r\n            date: new Date(\"2021-09-17 23:39:52\"),\r\n            companyName: \"Прайм-Авто\",\r\n            comment: \"\",\r\n            carrierFullName: \"Кузнецов Даниил Вячеславович\",\r\n            carrierPhoneNumber: \"+7156133137\",\r\n            atiCode: 70531,\r\n        },\r\n        {\r\n            id: 3,\r\n            date: new Date(\"2021-09-23 22:03:29\"),\r\n            companyName: \"ГрузАвтоэлита\",\r\n            comment: \"\",\r\n            carrierFullName: \"Антонов Савелий Матвеевич\",\r\n            carrierPhoneNumber: \"+7222607102\",\r\n            atiCode: 88271,\r\n        },\r\n        {\r\n            id: 4,\r\n            date: new Date(\"2021-09-29 18:28:39\"),\r\n            companyName: \"Автополис\",\r\n            comment: \"\",\r\n            carrierFullName: \"Золотова Виктория Мироновна\",\r\n            carrierPhoneNumber: \"+7257457484\",\r\n            atiCode: 34161,\r\n        },\r\n        {\r\n            id: 5,\r\n            date: new Date(\"2021-10-07 22:32:34\"),\r\n            companyName: \"Автолидер\",\r\n            comment: \"\",\r\n            carrierFullName: \"Шульгин Владимир Ярославович\",\r\n            carrierPhoneNumber: \"+7282332520\",\r\n            atiCode: 35171,\r\n        },\r\n        {\r\n            id: 6,\r\n            date: new Date(\"2021-09-20 09:31:46\"),\r\n            companyName: \"Кабриолет\",\r\n            comment: \"\",\r\n            carrierFullName: \"Парамонов Григорий Владиславович\",\r\n            carrierPhoneNumber: \"+7291022904\",\r\n            atiCode: 11040,\r\n        },\r\n        {\r\n            id: 7,\r\n            date: new Date(\"2021-09-24 01:16:28\"),\r\n            companyName: \"Орлан\",\r\n            comment: \"\",\r\n            carrierFullName: \"Суслов Филипп Максимович\",\r\n            carrierPhoneNumber: \"+7305740259\",\r\n            atiCode: 47210,\r\n        },\r\n        {\r\n            id: 8,\r\n            date: new Date(\"2021-09-29 06:06:49\"),\r\n            companyName: \"Стрела\",\r\n            comment: \"\",\r\n            carrierFullName: \"Орлова Милана Михайловна\",\r\n            carrierPhoneNumber: \"+7336965758\",\r\n            atiCode: 14737,\r\n        },\r\n        {\r\n            id: 9,\r\n            date: new Date(\"2021-09-15 21:00:13\"),\r\n            companyName: \"Новые горизонты\",\r\n            comment: \"\",\r\n            carrierFullName: \"Филатова Анна Глебовна\",\r\n            carrierPhoneNumber: \"+7379028738\",\r\n            atiCode: 92471,\r\n        },\r\n        {\r\n            id: 10,\r\n            date: new Date(\"2021-10-05 16:16:40\"),\r\n            companyName: \"Бэст\",\r\n            comment: \"\",\r\n            carrierFullName: \"Захаров Александр Эмильевич\",\r\n            carrierPhoneNumber: \"+7474765195\",\r\n            atiCode: 78493,\r\n        },\r\n        {\r\n            id: 11,\r\n            date: new Date(\"2021-09-12 06:08:17\"),\r\n            companyName: \"Сириус\",\r\n            comment: \"\",\r\n            carrierFullName: \"Сергеев Алексей Арсентьевич\",\r\n            carrierPhoneNumber: \"+7547587223\",\r\n            atiCode: 28943,\r\n        },\r\n        {\r\n            id: 12,\r\n            date: new Date(\"2021-09-08 05:31:03\"),\r\n            companyName: \"Фордевинд\",\r\n            comment: \"\",\r\n            carrierFullName: \"Фролова Александра Павловна\",\r\n            carrierPhoneNumber: \"+7550266648\",\r\n            atiCode: 10149,\r\n        },\r\n        {\r\n            id: 13,\r\n            date: new Date(\"2021-09-05 10:08:28\"),\r\n            companyName: \"Макси\",\r\n            comment: \"\",\r\n            carrierFullName: \"Лебедев Алексей Савельевич\",\r\n            carrierPhoneNumber: \"+7610524443\",\r\n            atiCode: 11142,\r\n        },\r\n        {\r\n            id: 14,\r\n            date: new Date(\"2021-09-22 18:21:56\"),\r\n            companyName: \"Зеленый свет\",\r\n            comment: \"\",\r\n            carrierFullName: \"Осипов Денис Тимофеевич\",\r\n            carrierPhoneNumber: \"+7650898658\",\r\n            atiCode: 48185,\r\n        },\r\n        {\r\n            id: 15,\r\n            date: new Date(\"2021-09-14 18:30:43\"),\r\n            companyName: \"Юность\",\r\n            comment: \"\",\r\n            carrierFullName: \"Мартынов Игорь Павлович\",\r\n            carrierPhoneNumber: \"+7681226412\",\r\n            atiCode: 94704,\r\n        },\r\n        {\r\n            id: 16,\r\n            date: new Date(\"2021-09-09 12:12:01\"),\r\n            companyName: \"Автостиль\",\r\n            comment: \"\",\r\n            carrierFullName: \"Демьянова Дарья Владиславовна\",\r\n            carrierPhoneNumber: \"+7752195211\",\r\n            atiCode: 20201,\r\n        },\r\n        {\r\n            id: 17,\r\n            date: new Date(\"2021-10-07 15:50:49\"),\r\n            companyName: \"Физика вождения\",\r\n            comment: \"\",\r\n            carrierFullName: \"Михайлов Давид Максимович\",\r\n            carrierPhoneNumber: \"+7755004127\",\r\n            atiCode: 70785,\r\n        },\r\n        {\r\n            id: 18,\r\n            date: new Date(\"2021-09-12 00:43:02\"),\r\n            companyName: \"Формула-1\",\r\n            comment: \"\",\r\n            carrierFullName: \"Гаврилов Егор Ильич\",\r\n            carrierPhoneNumber: \"+7919581970\",\r\n            atiCode: 12622,\r\n        },\r\n        {\r\n            id: 19,\r\n            date: new Date(\"2021-09-16 14:07:37\"),\r\n            companyName: \"Светофор\",\r\n            comment: \"\",\r\n            carrierFullName: \"Боброва Алиса Максимовна\",\r\n            carrierPhoneNumber: \"+7945953646\",\r\n            atiCode: 74081,\r\n        },\r\n        {\r\n            id: 20,\r\n            date: new Date(\"2021-10-02 12:06:13\"),\r\n            companyName: \"Фаркоп\",\r\n            comment: \"\",\r\n            carrierFullName: \"Иванова Алёна Арсентьевна\",\r\n            carrierPhoneNumber: \"+7962691517\",\r\n            atiCode: 84790,\r\n        },\r\n        {\r\n            id: 21,\r\n            date: new Date(\"2021-09-16 16:49:25\"),\r\n            companyName: \"АвтоГарвард\",\r\n            comment: \"\",\r\n            carrierFullName: \"Кузьмин Константин Александрович\",\r\n            carrierPhoneNumber: \"+7967647615\",\r\n            atiCode: 22299,\r\n        }\r\n    ]\r\n};","import * as React from \"react\";\r\nimport classNames from 'classnames/bind';\r\n\r\nimport style from \"./Main.module.css\";\r\nimport {AdminModeContext, Application} from \"../../App\";\r\n\r\nimport ApplicationModal from \"../ApplicationModal/ApplicationModal\";\r\n\r\nimport {testData} from \"../../assets/TestData\"\r\n\r\ntype MainTableProps = {};\r\n\r\ntype MainTableState = {\r\n    currentApplication: Application;\r\n    modalIsOpen: boolean;\r\n    applications: Application[];\r\n\r\n};\r\n\r\nconst emptyApplication: Application = {\r\n    id: 0,\r\n    date: new Date(),\r\n    companyName: \"\",\r\n    comment: \"\",\r\n    carrierFullName: \"\",\r\n    carrierPhoneNumber: \"\",\r\n    atiCode: 0,\r\n};\r\n\r\nexport default class Main extends React.Component<MainTableProps, MainTableState> {\r\n    readonly state: MainTableState = {\r\n        currentApplication: emptyApplication,\r\n        modalIsOpen: false,\r\n        applications: []\r\n    };\r\n\r\n    getAllValues(): Array<any> {\r\n        let list = new Array<any>();\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let key = localStorage.key(i);\r\n            let value;\r\n            if (key && key !== \"lastId\") {\r\n                value = localStorage.getItem(key);\r\n            }\r\n            if (value) {\r\n                let index: number = Number(key);\r\n                value = JSON.parse(value);\r\n                value.date = new Date(value.date);\r\n                list[index] = value;\r\n            }\r\n        }\r\n        console.log(list);\r\n        return list;\r\n\r\n    }\r\n\r\n    handleSelectApplication = (application: Application, event: React.MouseEvent<HTMLDivElement>) => {\r\n        event.stopPropagation();\r\n        this.setState({currentApplication: application});\r\n        document.addEventListener(\"keydown\", this.escRemoveSelection, false);\r\n    };\r\n\r\n    handleRemoveSelection = () => {\r\n        this.setState({\r\n            currentApplication: emptyApplication\r\n        });\r\n        document.removeEventListener(\"keydown\", this.escRemoveSelection, false);\r\n    };\r\n\r\n    escRemoveSelection = (event: KeyboardEvent) => {\r\n        if (event.code === \"Escape\") {\r\n            this.handleRemoveSelection();\r\n        }\r\n    };\r\n\r\n    handleAddApplication = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.stopPropagation();\r\n        this.handleRemoveSelection();\r\n        this.openModal();\r\n    };\r\n\r\n    handleChangeApplication = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.stopPropagation();\r\n        this.openModal();\r\n    };\r\n\r\n    handleDeleteApplication = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.stopPropagation();\r\n        localStorage.removeItem(this.state.currentApplication.id.toString());\r\n        this.updateApplications();\r\n    };\r\n\r\n    openModal = () => {\r\n        this.setState({modalIsOpen: true});\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({modalIsOpen: false});\r\n    };\r\n\r\n    updateApplications(): void {\r\n        let values = this.getAllValues();\r\n        this.setState({applications: values});\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.updateApplications();\r\n    }\r\n\r\n    addTestData = () => {\r\n        let list = testData.applications;\r\n        let lastId;\r\n        lastId = localStorage.getItem('lastId');\r\n        let newId = lastId === null ? 0 : parseInt(lastId);\r\n        for (let i = 0; i < list.length; i++) {\r\n            newId++;\r\n            list[i].id = newId;\r\n            localStorage.setItem(newId.toString(), JSON.stringify(list[i]));\r\n        }\r\n        localStorage.setItem('lastId', newId.toString());\r\n        this.updateApplications();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.mainWrapper}>\r\n                <div className={style.main} onClick={() => this.handleRemoveSelection()}>\r\n\r\n                    <AdminModeContext.Consumer>\r\n                        {({adminMode}) => (\r\n                            <div className={style.tableButtons}>\r\n                                <button className={classNames(style.tableButton, style.testDataButton)}\r\n                                        onClick={() => this.addTestData()}>Заполнить тестовыми данными\r\n                                </button>\r\n                                <div className={style.tableEditButtons}>\r\n                                    <button className={style.tableButton} onClick={this.handleAddApplication}\r\n                                            disabled={!adminMode}>Добавить\r\n                                    </button>\r\n                                    <button className={style.tableButton} onClick={this.handleChangeApplication}\r\n                                            disabled={!adminMode || this.state.currentApplication.id === 0}>Изменить\r\n                                    </button>\r\n                                    <button className={style.tableButton} onClick={this.handleDeleteApplication}\r\n                                            disabled={!adminMode || this.state.currentApplication.id === 0}>Удалить\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </AdminModeContext.Consumer>\r\n                    <div className={style.tableWrapper}>\r\n                        <div className={style.tableScroll}>\r\n                            <table className={style.table}>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Номер заявки</th>\r\n                                    <th>Создана</th>\r\n                                    <th>Фирма клиента</th>\r\n                                    <th>ФИО перевозчика</th>\r\n                                    <th>Телефен перевозчика</th>\r\n                                    <th>ATI перевозчика</th>\r\n                                    <th>Комментарий</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.state.applications.map(item => (\r\n                                    <tr key={item.id}\r\n                                        className={classNames(style.application, this.state.currentApplication.id === item.id ? style.active : '')}\r\n                                        onClick={(e) => this.handleSelectApplication(item, e)}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.date.toLocaleDateString()} {item.date.toLocaleTimeString()}</td>\r\n                                        <td>{item.companyName === \"\" ? \"Не указана\" : item.companyName}</td>\r\n                                        <td>{item.carrierFullName === \"\" ? \"Не указано\" : item.carrierFullName}</td>\r\n                                        <td>{item.carrierPhoneNumber === \"\" ? \"Не указан\" : item.carrierPhoneNumber}</td>\r\n                                        <td>\r\n                                            {item.atiCode === 0 ? \"—\" :\r\n                                                <a href={`https://ati.su/firms/${item.atiCode}/info`}>{item.atiCode}</a>\r\n                                            }\r\n                                        </td>\r\n                                        <td>{item.comment === \"\" ? \"Отсутствует\" : item.comment}</td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ApplicationModal application={this.state.currentApplication} isOpen={this.state.modalIsOpen}\r\n                                  closeModal={() => this.closeModal()} update={() => this.updateApplications()}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Main from \"./components/Main/Main\";\r\n\r\n\r\nexport interface Application {\r\n    id: number;\r\n    date: Date;\r\n    companyName: string;\r\n    comment: string;\r\n    carrierFullName: string;\r\n    carrierPhoneNumber: string;\r\n    atiCode: number;\r\n}\r\n\r\nexport const AdminModeContext = React.createContext({\r\n    adminMode: false,\r\n    toggleMode: () => {\r\n    }\r\n\r\n});\r\n\r\ntype AppState = {\r\n    adminMode: boolean;\r\n};\r\n\r\nexport class App extends React.Component<{}, AppState> {\r\n    readonly state: AppState = {\r\n        adminMode: true,\r\n    };\r\n\r\n    toggleMode = () => {\r\n        this.setState({adminMode: !this.state.adminMode});\r\n        console.log(this.state.adminMode)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AdminModeContext.Provider value={{adminMode: this.state.adminMode, toggleMode: () => this.toggleMode()}}>\r\n                <div className=\"App\">\r\n                    <Header/>\r\n                    <Main/>\r\n                </div>\r\n            </AdminModeContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__34KUR\",\"headerTitleWrapper\":\"Header_headerTitleWrapper__1Tl4v\",\"logo\":\"Header_logo__3sNS-\",\"headerTitle\":\"Header_headerTitle__1CDSH\",\"mode\":\"Header_mode__50axu\",\"modeButton\":\"Header_modeButton__pIxOO\"};"],"sourceRoot":""}